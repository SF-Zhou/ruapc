name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: |
        echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
        echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.9

    - name: Setup Soft-RoCE
      run: |
        KERNEL_VERSION=$(uname -r | cut -d '-' -f 1)
        KERNEL_NAME="linux-${KERNEL_VERSION%'.0'}"
        DOWNLOAD_LINK="https://cdn.kernel.org/pub/linux/kernel/v${KERNEL_VERSION%%.*}.x/${KERNEL_NAME}.tar.xz"
        ETHERNET_CARD=$(ip link | awk -F ": " '$0 !~ "lo|vir|wl|^[^0-9]"{print $2;getline}' | head -1)
        echo "kernel version is ${KERNEL_VERSION}, download link is ${DOWNLOAD_LINK}, ethernet card is ${ETHERNET_CARD}"
        wget -q $DOWNLOAD_LINK -O /tmp/$KERNEL_NAME.tar.xz
        tar xf /tmp/$KERNEL_NAME.tar.xz --directory=/tmp
        RXE_PATH="/tmp/$KERNEL_NAME/drivers/infiniband/sw/rxe"
        sed 's/$(CONFIG_RDMA_RXE)/m/g' $RXE_PATH/Makefile > $RXE_PATH/Kbuild
        make -C /lib/modules/$(uname -r)/build M=$RXE_PATH modules -j
        sudo modprobe ib_core
        sudo modprobe rdma_ucm
        sudo insmod $RXE_PATH/rdma_rxe.ko
        sudo rdma link add rxe_0 type rxe netdev $ETHERNET_CARD
        rdma link

    - name: Run tests
      run: |
        sudo prlimit --pid $$ -l=unlimited && ulimit -a
        sudo apt install -y pkg-config libibverbs-dev ibverbs-utils
        ibv_devinfo -d rxe_0 -v
        cargo install cargo-llvm-cov cargo-nextest
        cargo llvm-cov nextest --all-features
        cargo llvm-cov report --cobertura --output-path target/llvm-cov-target/cobertura.xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: SF-Zhou/ruapc
        files: target/llvm-cov-target/cobertura.xml

    - name: Upload test results to Codecov
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: SF-Zhou/ruapc
        files: target/nextest/default/junit.xml
